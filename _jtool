#compdef jtool
# ------------------------------------------------------------------------------
#  Completion script for jtool 
# ------------------------------------------------------------------------------
# OTool Compatible Options:
# dyldinfo Compatible Options:
# Code Signing Options:
# Output Options:
# Advanced Options:
# Destructive Options (will write output to /tmp):
#  '(-/+ *)'lcmain"[Toggle pre-Mountain-Lion/iOS6 compatibility (LC_UNIXTHREAD/LC_MAIN)]" \
#  '(-/+ *)'enc"[Mark as decrypted/encrypted (toggles cryptid of LC_ENCRYPTION_INFO[64])]"
_arguments \
  '*: :->files' \
  '-h[print header (ELF or Mach-O)]' \
  '-f[print fat header]' \
  '-arch[Architecture type]:Architecture for use on universal files:->archs' \
  '-l[List sections/commands in binary]' \
  '-L[List shared libraries used (like LDD)]' \
  '-v[Verbose output. -vv is even more verbose. -vvv might be more than you can handle :-)]' \
  '-bind[print addresses dyld will set based on symbolic lookups]' \
  '-lazy_bind[print symbols which dyld will lazily set on first use]' \
  '-weak_bind[print symbols which dyld must coalesce]' \
  '-export[print addresses of all symbols this file exports]' \
  '-opcodes[print opcodes used to generate the rebase and binding information]' \
  '-function_starts[print table of function start addresses]' \
  '-data_in_code[print any data-in-code inforamtion]' \
  '--sig[Show code signature in binary (if any)]' \
  '--sign[(adhoc) self-sign with no certificate]' \
  '--ident[provides identity (fake, of course)]: Fake Identity:->ident' \
  '--appdir[Set App Path (for code signing and/or verification)]' \
  '--ent[Show entitlements in binary (if any)]' \
  '--html[Output as HTML (implies color)]' \
  '--curses[Output as Color using ncurses (can also set JCOLOR=1)]' \
  '--pcrelative[show addresses as PC relative offset]' \
  '--slide[slide text by _slide_ bytes (may be negative)]:Number of bytes to slide:->slide' \
  '--rebase[rebase text to this address (destructive)]:Address location for rebase:->address' \
  '--inplace[Perform destructive operations in place (instead of out.bin) for the brave]' \
  '--version[Show tool version and compilation date]' \
  '-m[Modify]:__SEGMENT[.__section],[_offset][,size] (null):->segment' \
  '-r[Remove/Resize (Experimental)]:__SEGMENT[.__section],[_offset][,size] (null):->segment' \
  '-rL[Library]:_dylib/soname_:->dylib' \
  '-rC[Load Command]:_Load_Command_#_:->command' \
  '(-+ ##)'-pie"[Toggle Position Independent Executable (ASLR)]"


case "$state" in
  archs)
    archs=( \
    "arm64" \
    "armv7" \
    "armv7s" \
    "i386" \
    "x86_64" \
    )
    _values "Architecture for use on universal files" $archs
    ;;
  files)
    _files
    ;;
  ident)
    ;;
  slide)
    ;;
  address)
    ;;
  dylib)
    ;;
  command)
    ;;
  segment)
    ;;
esac